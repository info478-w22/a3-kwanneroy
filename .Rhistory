hours_in_a_week <- 24 * 7
num_students
# Store the number of sections in info 201 in a variable
num_sections <- 8
students_per_sections <- num_students / num_sections
students_per_sections
temperature <- 66.4
name <- "Mike"
equality <- 3 > 2
# Exercise 1: practice with basic R syntax
# Create a variable `hometown` that stores the city in which you were born
hometown <- Paris
# Assign your name to the variable `my_name`
my_name <- Katia
# Assign your height (in inches) to a variable `my_height`
my_height <- ((5 * 12) + 5)
# Create a variable `puppies` equal to the number of puppies you'd like to have
puppies <- 3
# Create a variable `puppy_price`, which is how much you think a puppy costs
puppy_price <- 1000
# Create a variable `total_cost` that has the total cost of all of your puppies
total_cost <- 3 * 1000
# Create a boolean variable `too_expensive`, set to TRUE if the cost is greater
# than $1,000
too_expensive <- 1000 < total_cost
# Create a variable `max_puppies`, which is the number of puppies you can
# afford for $1,000
max_puppies <- 1000 / 1000
# Exercise 1: practice with basic R syntax
# Create a variable `hometown` that stores the city in which you were born
hometown <- "Paris"
# Assign your name to the variable `my_name`
my_name <- "Katia"
# Assign your height (in inches) to a variable `my_height`
my_height <- ((5 * 12) + 5)
# Create a variable `puppies` equal to the number of puppies you'd like to have
puppies <- 3
# Create a variable `puppy_price`, which is how much you think a puppy costs
puppy_price <- 1000
# Create a variable `total_cost` that has the total cost of all of your puppies
total_cost <- 3 * 1000
# Create a boolean variable `too_expensive`, set to TRUE if the cost is greater
# than $1,000
too_expensive <- 1000 < total_cost
# Create a variable `max_puppies`, which is the number of puppies you can
# afford for $1,000
max_puppies <- 1000 / 1000
# CALLING FUNCTIONS
min(3, 10, pi)
# CALLING FUNCTIONS
smallest_num <- min(3, 10, pi)
biggest_num <- max(3, 10, pi)
seq(10, 50)
paste("Hello", "World!")
paste("There are", students_per_sections, "students in each section of INFO 201")
# BASIC R SYNTAX
x <- 6
# Store the number of INFO 201 students in a variable
num_students <- 208
hours_in_a_week <- 24 * 7
# This is a comment (R will ignore!)
num_students
# ctrl enter acts like run
# Store the number of sections in info 201 in a variable
num_sections <- 8
students_per_sections <- num_students / num_sections
students_per_sections
temperature <- 66.4
name <- "Mike"
equality <- 3 > 2
# CALLING FUNCTIONS
smallest_num <- min(3, 10, pi)
biggest_num <- max(3, 10, pi)
seq(10, 50)
paste("Hello", "World!")
paste("There are", students_per_sections, "students in each section of INFO 201")
library(stringr)
install.packages("stringr")
library(stringr)
str_trim("     space before and after     ")
str_trim?
?str_trim
# Exercise 2: using built-in string functions
# Create a variable `lyric` that contains the text "I like to eat apples and
# bananas"
lyric <- "I like to eat apples and bananas"
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- substr(lyric, 1, 13)
# Use the `substr()` function to extract the 15th through the last letter of the
# `lyric`, and store the result in a variable called `fruits`
# Hint: use `nchar()` to determine how many total letters there are!
nchar(lyric)
fruits <- substr(lyric, 15, 32)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub("a", "ee", x)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub("a ", "ee ", x)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub("a ", "ee ", lyrics)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub("a ", "ee ", lyric)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub("a", "ee", lyric)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "o".
# Store the result in a variable called `fruits_o`
fruits_o <- gsub("a", "o", lyric)
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
lyrics_e <- c(intro, fruits_e)
print(lyrice_e)
print(lyrics_e)
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
print(lyrics_e)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "o".
# Store the result in a variable called `fruits_o`
fruits_o <- gsub("a", "o", lyric)
lyrics_e <- paste(intro, fruits_e)
print(lyrics_e)
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
print(paste(intro, fruits_o))
# Exercise 2: using built-in string functions
# Create a variable `lyric` that contains the text "I like to eat apples and
# bananas"
lyric <- "I like to eat apples and bananas"
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- substr(lyric, 1, 13)
# Use the `substr()` function to extract the 15th through the last letter of the
# `lyric`, and store the result in a variable called `fruits`
# Hint: use `nchar()` to determine how many total letters there are!
nchar(lyric)
fruits <- substr(lyric, 15, nchar(lyric))
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub("a", "ee", fruits)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "o".
# Store the result in a variable called `fruits_o`
fruits_o <- gsub("a", "o", fruits)
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
lyrics_e <- paste(intro, fruits_e)
print(lyrics_e)
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
print(paste(intro, fruits_o))
test <- xtile(c(4, 5, 6, 7), 10, probs = NULL, cutpoints = NULL, wt = NULL)
install.packages("statar")
library("statar")
test <- xtile(c(4, 5, 6, 7), 10, probs = NULL, cutpoints = NULL, wt = NULL)
install.packages(c("digest", "caTools", "bitops"))
update.packages()
View(midwest)
View("midwest")
View(midwest)
shiny::runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
?toJSON
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
View(midwest)
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp()
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
t1_sidebar <- sidebarPanel(
h1("Select the race of interest:"),
selectInput(
inputId = "race",
label = "Race",
choices = c( "White" = "popwhite",
"Black" = "popblack",
"American Indian" = "popamerindian",
"Asian" = "popasian",
"Other" = "popother")
),
checkboxInput(inputId = "checkbox",
label = "Population Total",
value = FALSE)
)
runApp()
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp()
runApp()
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp()
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
install.packages("rcurl")
shiny::runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
install.packages("rcurl")
install.packages("rcurl")
install.packages("rcurl")
install.packages("rcurl")
install.packages("tidyverse")
install.packages("rcurl")
install.packages("RCurl")
shiny::runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp()
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
shiny::runApp('C:/Users/cello/Documents/info201/a6-kwanneroy')
knitr::opts_chunk$set(echo = TRUE)
# odds ratio - look at the result first
odds_liver_disease <- 75 / 25
odds_no_liver_disease <- 50 / 100
or_liver_alcohol <- odds_liver_disease / odds_no_liver_disease
knitr::opts_chunk$set(echo = TRUE)
# odds ratio - look at the result first
odds_liver_disease <- 75 / 25
odds_no_liver_disease <- 50 / 100
or_liver_alcohol <- odds_liver_disease / odds_no_liver_disease
# relative risk - over time
risk_veg_ha <- 10 / 100
risk_meat_ha <- 20 / 100
rr_veg_ha <- risk_veg_ha / risk_meat_ha
rr_veg_ha
# relative risk
risk_bike_ta <- 30 / 100
risk_bus_ta <- 10 / 120
rr_bike_ta <- risk_bike_ta / risk_bus_ta
rr_bike_ta
# odds ratio
odds_cavity <- 80 / 220
odds_no_cavity <- 70/180
or_cavity_seltzer <- odds_cavity / odds_no_cavity
or_cavity_seltzer
# Function
relative_risk <- function(dataframe, column) {
risk <- (column / birthwt$lwt)/(birthwt$bwt)
dataframe %>%
mutate(column = risk)
}
relative_risk(birthwt, birthwt$smoke)
data("birthwt")
# Script in which you should do your analysis described on Canvas
library("HSAUR")
library("MASS")
library("Epi")
library(dplyr)
library(knitr)
library(ggplot2)
library(tidyverse)
bcg <- data("BCG")
data("birthwt")
data("bdendo")
# Function
relative_risk <- function(dataframe, column) {
risk <- (column / birthwt$lwt)/(birthwt$bwt)
dataframe %>%
mutate(column = risk)
}
relative_risk(birthwt, birthwt$smoke)
relative_risk(birthwt, birthwt$smoke)
View(birthwt)
# Function
relative_risk <- function(dataframe, column) {
risk <- (column / birthwt$lwt)/(birthwt$bwt)
dataframe <- dataframe %>%
mutate(column = risk)
}
relative_risk(birthwt, birthwt$smoke)
View(birthwt)
# Function
relative_risk <- function(column) {
risk <- (column / birthwt$lwt)/(birthwt$bwt)
birthwt <- birthwt %>%
mutate(column = risk)
}
relative_risk(birthwt$smoke)
# Function
relative_risk <- function(column) {
risk <- (column / birthwt$lwt)/(birthwt$bwt)
}
smoke_risk <- relative_risk(birthwt$smoke)
birthwt <- birthwt %>%
mutate(smoke_risk = smoke_risk)
# Hypertension status
ht_risk <- relative_risk(birthwt$ht)
birthwt <- birthwt %>%
mutate(ht_risk = ht_risk)
# Attending 0 prenatal care visits
ptl_risk <- relative_risk(birthwt$ptl = 0)
# Attending 0 prenatal care visits
ptl_risk <- relative_risk(birthwt$ptl == 0)
birthwt <- birthwt %>%
mutate(ptl_risk = ptl_risk)
# Giving birth before age 20
age_20_under <- relative_risk(birthwt$age < 20)
birthwt <- birthwt %>%
mutate(age_20_under = age_20_under)
library("Epi")
View(bdendo)
shiny::runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
install.packages("dcm")
install.packages("EpiModel")
install.packages("EpiModel")
runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
library(shiny); runApp('C:/Users/cello/info478/info478-team2-final/kavya_server_code.R')
runApp('C:/Users/cello/info478/info478-team2-final/kavya_server_code.R')
runApp('C:/Users/cello/info478/info478-team2-final')
library(leaflet)
runApp('C:/Users/cello/info478/info478-team2-final')
library(shiny); runApp('C:/Users/cello/info478/info478-team2-final/kavya_server_code.R')
runApp('kavya_server_code.R')
runApp('C:/Users/cello/info478/info478-team2-final/kavya_server_code.R')
shiny::runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
install.packages("EpiModel")
install.packages("EpiModel")
shiny::runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
shiny::runApp('C:/Users/cello/info478/a3-kwanneroy')
install.packages("ggplot2")
runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
shiny::runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
shiny::runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp()
runApp('C:/Users/cello/info478/a3-kwanneroy')
prob_rate <- 0.63
avg_rate <- 0.13
#Deterministic Model
param <- param.dcm(inf.prob = prob_rate, act.rate = avg_rate, rec.rate = 1/7)
init <- init.dcm(s.num = 500, i.num = 1, r.num = 0)
control <- control.dcm(type = "SIR", nsims = 10, nsteps = 300)
mod <- dcm(param, init, control)
plot(mod, main = "Deterministic Model")
prob_rate <- 0.63
avg_rate <- 0.13
#Deterministic Model
param <- param.dcm(inf.prob = prob_rate, act.rate = avg_rate, rec.rate = 1/7)
init <- init.dcm(s.num = 500, i.num = 1, r.num = 0)
control <- control.dcm(type = "SIR", nsims = 10, nsteps = 1000)
mod <- dcm(param, init, control)
plot(mod, main = "Deterministic Model")
runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
prob_rate <- 0
if (input$chosen_mandate2 == "none") {
prob_rate <- 0.63
} else if (input$chosen_mandate2 == "masks") {
prob_rate <- 0.45
} else {
prob_rate <- 0.2
}
avg_rate <- 0
if (input$chosen_mandate2 == "none") {
avg_rate <- 0.13
} else if (input$chosen_mandate2 == "masks") {
avg_rate <- 0.35
} else {
avg_rate <- 0.4
}
param <- param.icm(inf.prob = prob_rate, act.rate = avg_rate, rec.rate = 0.7)
init <- init.icm(s.num = 500, i.num = 1, r.num = 0)
control <- control.icm(type = "SIR", nsims = 10, nsteps = 300)
mod <- icm(param, init, control)
plot(mod, qnts = FALSE, sim.lines = FALSE, add = TRUE, mean.lty = 2, legend = FALSE)
prob_rate <- 0.63
avg_rate <- 0.13
param <- param.icm(inf.prob = prob_rate, act.rate = avg_rate, rec.rate = 0.7)
init <- init.icm(s.num = 500, i.num = 1, r.num = 0)
control <- control.icm(type = "SIR", nsims = 10, nsteps = 300)
mod <- icm(param, init, control)
plot(mod, qnts = FALSE, sim.lines = FALSE, add = TRUE, mean.lty = 2, legend = FALSE)
prob_rate <- 0.63
avg_rate <- 0.13
param <- param.icm(inf.prob = prob_rate, act.rate = avg_rate, rec.rate = 0.7)
init <- init.icm(s.num = 500, i.num = 1, r.num = 0)
control <- control.icm(type = "SIR", nsims = 10, nsteps = 300)
mod <- icm(param, init, control)
plot(mod, qnts = FALSE, sim.lines = FALSE, mean.lty = 2, legend = FALSE)
prob_rate <- 0.63
avg_rate <- 0.13
param <- param.icm(inf.prob = prob_rate, act.rate = avg_rate, rec.rate = 1/7)
init <- init.icm(s.num = 500, i.num = 1, r.num = 0)
control <- control.icm(type = "SIR", nsims = 10, nsteps = 300)
mod <- icm(param, init, control)
plot(mod, qnts = FALSE, sim.lines = FALSE, mean.lty = 2, legend = FALSE)
prob_rate <- 0.63
avg_rate <- 0.13
param <- param.icm(inf.prob = prob_rate, act.rate = avg_rate, rec.rate = 1/7)
init <- init.icm(s.num = 500, i.num = 1, r.num = 0)
control <- control.icm(type = "SIR", nsims = 10, nsteps = 300)
mod <- icm(param, init, control)
par(mar = c(3.2, 3, 2, 1), mgp = c(2, 1, 0), mfrow = c(1, 2))
plot(mod, "Stochastic Model")
prob_rate <- 0.63
avg_rate <- 0.13
param <- param.icm(inf.prob = prob_rate, act.rate = avg_rate, rec.rate = 1/7)
init <- init.icm(s.num = 500, i.num = 1, r.num = 0)
control <- control.icm(type = "SIR", nsims = 10, nsteps = 300)
mod <- icm(param, init, control)
par(mar = c(3.2, 3, 2, 1), mgp = c(2, 1, 0), mfrow = c(1, 2))
plot(mod, main = "Stochastic Model")
prob_rate <- 0.63
avg_rate <- 0.13
param <- param.icm(inf.prob = prob_rate, act.rate = avg_rate, rec.rate = 1/7)
init <- init.icm(s.num = 500, i.num = 1, r.num = 0)
control <- control.icm(type = "SIR", nsims = 10, nsteps = 1000)
mod <- icm(param, init, control)
par(mar = c(3.2, 3, 2, 1), mgp = c(2, 1, 0), mfrow = c(1, 2))
plot(mod, main = "Stochastic Model")
prob_rate <- 0.63
avg_rate <- 0.13
param <- param.icm(inf.prob = prob_rate, act.rate = avg_rate, rec.rate = 1/7)
init <- init.icm(s.num = 500, i.num = 1, r.num = 0)
control <- control.icm(type = "SIR", nsims = 10, nsteps = 1000)
mod <- icm(param, init, control)
par(mar = c(3.2, 3, 2, 1), mgp = c(2, 1, 0), mfrow = c(1, 2))
plot(mod, qnts = FALSE, sim.lines = FALSE, mean.lty = 2, legend = FALSE)
runApp('C:/Users/cello/info478/a3-kwanneroy')
shiny::runApp('C:/Users/cello/info478/a3-kwanneroy')
runApp('C:/Users/cello/info478/a3-kwanneroy')
setwd("C:/Users/cello/info478/a3-kwanneroy")
runApp()
gc()
gc()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
